/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Total;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class RequestPresentationDate extends javax.swing.JFrame {
    String reportFile = "Report.txt";
    FileUtil f = new FileUtil();
    File file = new File(f.getFileLocation(reportFile));
    String PreDateFile ="Presentation Request.txt";
    FileUtil pf = new FileUtil();
    File Pfile = new File(pf.getFileLocation(PreDateFile));
    String AssessmentFile = "AssessmentType.txt" ;
    FileUtil af = new FileUtil();
    File Afile = new File(af.getFileLocation(AssessmentFile));
    StudentMain studentMain = new StudentMain();
    private String TpNumber;
    private String Intake;


    /**
     * Creates new form RequestPresentationDate
     */
    public RequestPresentationDate(String TpNumber,String Intake) {
        initComponents();
        this.TpNumber = TpNumber;
        this.Intake = Intake;
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(Afile));
            br.readLine();
            
            Object[] tableLines = br.lines().toArray();
            
            
            for(int i =0; i<tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow  = line.split("@");
                for (int j = 0; j < dataRow.length; j++) {
                   dataRow[j] = dataRow[j].trim();
            
                }
                if (dataRow[0].equals(TpNumber)){
                    AssessmentForPresentDate.addItem(dataRow[2]);
                    
                } else if (dataRow[1].equals(Intake)){
                    AssessmentForPresentDate.addItem(dataRow[2]);
                }
                
            }
            
        } catch (Exception ex) {
            Logger.getLogger(Student_UI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private RequestPresentationDate() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        AssessmentForPresentDate = new javax.swing.JComboBox<>();
        RequestPreDateBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PresentationDateTxt = new javax.swing.JLabel();
        Status_Predate = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Assessment Selected:");

        RequestPreDateBtn.setText("Request Presentation Date");
        RequestPreDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RequestPreDateBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Presentation Date:");

        PresentationDateTxt.setText(" ");

        Status_Predate.setText(" ");

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Request Presentation Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RequestPreDateBtn)
                                            .addComponent(AssessmentForPresentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 154, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PresentationDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Status_Predate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(BackBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel3)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(AssessmentForPresentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(PresentationDateTxt)
                    .addComponent(Status_Predate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RequestPreDateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(BackBtn)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RequestPreDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RequestPreDateBtnActionPerformed
        // TODO add your handling code here:
        String AssessmentSelected = (String) AssessmentForPresentDate.getSelectedItem();
        boolean found =false;
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            br.readLine();
            Object[] tableLines = br.lines().toArray();
            
            
            for(int i =0; i<tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow  = line.split("@");
                for (int j = 0; j < dataRow.length; j++) {
                   dataRow[j] = dataRow[j].trim();
            
                }
                if (dataRow[2].equals(AssessmentSelected) && dataRow[3].equals(TpNumber)){
                    Project project = new Project(dataRow[0],dataRow[1],dataRow[2],dataRow[3],dataRow[4],"","");
                    found = true;
                    try {
            BufferedReader br1 = new BufferedReader(new FileReader(Pfile));
            br1.readLine();
            Object[] tableLines1 = br1.lines().toArray();
            
            
            for(int k =0; k<tableLines1.length; k++)
            {
                String line1 = tableLines1[k].toString().trim();
                String[] dataRow1  = line1.split("@");
                for (int m = 0; m < dataRow1.length; m++) {
                   dataRow1[m] = dataRow1[m].trim();
                }
                if (dataRow1[0].equals(project.getReportID())){ 
                    PresentationDateTxt.setText(dataRow1[1]);
                    Status_Predate.setText(dataRow1[2]);
                } 
                
            }
        
        } 
        catch (Exception ex) {
            Logger.getLogger(Student_UI.class.getName()).log(Level.SEVERE, null, ex);
        }

                }   
            }
            
        
        } 
        catch (Exception ex) {
            Logger.getLogger(Student_UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!found){
            JOptionPane.showMessageDialog(null, "The selected report has not been submitted.", "Error", JOptionPane.ERROR_MESSAGE);
            Status_Predate.setText("-");  
        }
        if (PresentationDateTxt.getText().equals("")) {
            PresentationDateTxt.setText("Date Not Assigned");
        }
    }//GEN-LAST:event_RequestPreDateBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        Student callBack = new Student(TpNumber,"",Intake);
        StudentMain CallBack = new StudentMain(callBack);
        CallBack.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestPresentationDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestPresentationDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestPresentationDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestPresentationDate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestPresentationDate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AssessmentForPresentDate;
    private javax.swing.JButton BackBtn;
    private javax.swing.JLabel PresentationDateTxt;
    private javax.swing.JButton RequestPreDateBtn;
    private javax.swing.JLabel Status_Predate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
