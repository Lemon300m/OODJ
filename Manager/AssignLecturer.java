
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author PogOwl
 */
public class AssignLecturer extends javax.swing.JFrame {

    /**
     * Creates new form newAssignLecturer
     */
    public AssignLecturer() {
        initComponents();
        tbReport.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
                if (!e.getValueIsAdjusting() && tbReport.getSelectedRow() != -1){
                    Object selectedValue = tbReport.getValueAt(tbReport.getSelectedRow(), 5);
                    lblSupervisor.setText(selectedValue != null ? selectedValue.toString() : "Not Selected");
                    Object selectedPosition = tbReport.getValueAt(tbReport.getSelectedRow(), 6);
                    lblSecondM.setText(selectedPosition != null? selectedPosition.toString() : "Not Selected");
                }
            }
        });
    }
    Functions fnc = new Functions();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbReport = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblSupervisor = new javax.swing.JLabel();
        btnSupervisor = new javax.swing.JButton();
        btnSecondM = new javax.swing.JButton();
        lblSecondM = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tbReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(tbReport);

        jLabel1.setText("Assign Lecturer roles");

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel2.setText("Selected Supervisor:");

        jLabel3.setText("Select Second Marker:");

        lblSupervisor.setText("Not selected");

        btnSupervisor.setText("Select Supervisor");
        btnSupervisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupervisorActionPerformed(evt);
            }
        });

        btnSecondM.setText("Select Second M.");
        btnSecondM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSecondMActionPerformed(evt);
            }
        });

        lblSecondM.setText("Not selected");

        btnConfirm.setText("Assign Position");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lblSupervisor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(lblSecondM)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(btnSupervisor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSecondM)
                .addGap(94, 94, 94))
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(btnConfirm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(lblSupervisor)
                    .addComponent(lblSecondM))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupervisor)
                    .addComponent(btnSecondM))
                .addGap(47, 47, 47)
                .addComponent(btnConfirm)
                .addGap(9, 9, 9)
                .addComponent(btnClose)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(9, 9, 9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(188, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new ManagerOption().setVisible(true);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            String relativePath = "Report.txt"; // Replace with actual relative path if different
            String filePath = fnc.getFileLocation(relativePath);
            fnc.readTextFileToTable(filePath, tbReport);
            
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnSupervisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupervisorActionPerformed
        if(lblSupervisor.getText().equals("Not Selected")){
            JFrame tableFrame = new JFrame("Choose a Supervisor");
            tableFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            JTable table = new JTable();
            try {
                String relativePath = "users.txt"; // Replace with actual relative path if different
                String filePath = fnc.getFileLocation(relativePath);
                BufferedReader br = new BufferedReader(new FileReader(filePath));
                String firstLine = br.readLine().trim();
                String line;
                String[] columnsName = firstLine.split(",");
                DefaultTableModel model = (DefaultTableModel)table.getModel();
                String[] selectiveColumn = new String[2];
                selectiveColumn[0] = columnsName[0];
                selectiveColumn[1] = columnsName[1];
                model.setColumnIdentifiers(selectiveColumn);
                while((line = br.readLine())!= null){
                    String[] data = line.split(" @ ");
                    if(data.length>=4 && "Lecturer".equals(data[3])){
                        String ID = data[0];
                        String name = data[1];
                        model.addRow(new Object[]{ID,name});
                    }
                }
                br.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event){
                    if(!event.getValueIsAdjusting()){
                        int selectedRow = table.getSelectedRow();
                        if(selectedRow != -1){
                            String selectedValue = table.getValueAt(selectedRow,0).toString();
                            lblSupervisor.setText(selectedValue);
                            tableFrame.dispose();
                        }
                    }
                }
            });
            JScrollPane scrollPane = new JScrollPane(table);
            tableFrame.add(scrollPane);
            tableFrame.setSize(300,200);
            tableFrame.setLocationRelativeTo(null);
            // Display the table window
            tableFrame.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Supervisor had already been set and can't be changed.");
        }
    }//GEN-LAST:event_btnSupervisorActionPerformed

    private void btnSecondMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSecondMActionPerformed
        if(lblSecondM.getText().equals("Not Selected")){
                JFrame tableFrame = new JFrame("Choose a Second Marker");
                tableFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                JTable table = new JTable();
                try {
                    String relativePath = "users.txt"; // Replace with actual relative path if different
                    String filePath = fnc.getFileLocation(relativePath);
                    BufferedReader br = new BufferedReader(new FileReader(filePath));
                    String firstLine = br.readLine().trim();
                    String line;
                    String[] columnsName = firstLine.split(",");
                    DefaultTableModel model = (DefaultTableModel)table.getModel();
                    String[] selectiveColumn = new String[2];
                    selectiveColumn[0] = columnsName[0];
                    selectiveColumn[1] = columnsName[1];
                    model.setColumnIdentifiers(selectiveColumn);
                    while((line = br.readLine())!= null){
                        String[] data = line.split(" @ ");
                        if(data.length>=4 && "Lecturer".equals(data[3])){
                            String ID = data[0];
                            String name = data[1];
                            model.addRow(new Object[]{ID,name});
                        }
                    }
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                    @Override
                    public void valueChanged(ListSelectionEvent event){
                        if(!event.getValueIsAdjusting()){
                            int selectedRow = table.getSelectedRow();
                            if(selectedRow != -1){
                                String selectedValue = table.getValueAt(selectedRow,0).toString();
                                lblSecondM.setText(selectedValue);
                                tableFrame.dispose();
                            }
                        }
                    }
                });
                JScrollPane scrollPane = new JScrollPane(table);
                tableFrame.add(scrollPane);
                tableFrame.setSize(300,200);
                tableFrame.setLocationRelativeTo(null);
                // Display the table window
                tableFrame.setVisible(true);
            
        }else{
            JOptionPane.showMessageDialog(this, "Second Marker had already been set and can't be changed.");
        }
    }//GEN-LAST:event_btnSecondMActionPerformed
    private void updatePosition(){
        int selectedRow = tbReport.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "No row selected.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(lblSupervisor.getText().equals(lblSecondM.getText())){
            JOptionPane.showMessageDialog(this, "Second Marker can't be the same as Supervisor.");
            lblSecondM.setText("Not Selected");
        }else{
            
            ArrayList<String> oriValue = new ArrayList<>();
            int count = tbReport.getColumnCount();
            for (int i = 0; i < count; i++){
                oriValue.add((String) tbReport.getValueAt(selectedRow, i));
            }
            String newSupervisor = lblSupervisor.getText();
            String newSecondM = lblSecondM.getText();
            if (newSupervisor.equals("Not Selected")){
                newSupervisor = "";
            }
            if (newSecondM.equals("Not Selected")){
                newSecondM = "";
            }
            tbReport.setValueAt(newSupervisor, selectedRow, 5);
            tbReport.setValueAt(newSecondM, selectedRow, 6);
            int fileLine = selectedRow + 2;
            String updatedText = oriValue.get(0) + " @ " + oriValue.get(1) + " @ " + oriValue.get(2) + " @ " + oriValue.get(3) + " @ " + oriValue.get(4) + " @ " + newSupervisor + " @ " + newSecondM;
            String relativePath = "Report.txt"; // Replace with actual relative path if different
            String filePath = System.getProperty("user.dir") + File.separator + relativePath;
            try{
                fnc.modifySpecificLine(filePath, fileLine, updatedText);
            }catch(IOException e){
                System.out.println("An error occured: " +e.getMessage());
            }
        }
    }
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(this,
                "This action cannot be revert. Are you sure?", "Assign Confirmation",
                JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.OK_OPTION){
            updatePosition();
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignLecturer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnSecondM;
    private javax.swing.JButton btnSupervisor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSecondM;
    private javax.swing.JLabel lblSupervisor;
    private javax.swing.JTable tbReport;
    // End of variables declaration//GEN-END:variables
}
